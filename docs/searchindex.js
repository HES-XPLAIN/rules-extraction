Search.setIndex({"docnames": ["index", "modules", "rules_extraction", "tests"], "filenames": ["index.rst", "modules.rst", "rules_extraction.rst", "tests.rst"], "titles": ["Welcome to Rules Extraction\u2019s documentation!", "rules-extraction", "rules_extraction package", "tests package"], "terms": {"rules_extract": [0, 1], "packag": [0, 1], "test": [0, 1, 2], "index": 0, "modul": [0, 1], "search": 0, "page": 0, "submodul": 1, "data_processor": 1, "dataprocessor": [1, 2], "filter_dataset": [1, 2], "make_target_df": [1, 2], "process_dataset": [1, 2], "hello": [1, 3], "hello_nam": [1, 2, 3], "hello_world": [1, 2, 3], "random_forest_train": 1, "randomforesttrain": [1, 2], "evalu": [1, 2], "extract_all_rul": [1, 2], "extract_rul": [1, 2], "fit": [1, 2], "recurs": [1, 2], "result_plott": 1, "resultplott": [1, 2], "plot_result": [1, 2], "rule_handl": 1, "rulehandl": [1, 2], "data_to_rul": [1, 2], "evaluate_perceptron": [1, 2], "fit_perceptron": [1, 2], "is_rul": [1, 2], "load": [1, 2], "load_rul": [1, 2], "op": [1, 2], "predict": [1, 2], "rank_rul": [1, 2], "save": [1, 2], "save_rul": [1, 2], "score": [1, 2], "visual": [1, 2], "util": 1, "content": 1, "test_hello": 1, "testhello": [1, 3], "test_hello_nam": [1, 3], "test_hello_world": [1, 3], "class": [2, 3], "model": 2, "dataload": 2, "devic": 2, "base": [2, 3], "object": 2, "static": 2, "df": 2, "target_class": 2, "feature_lay": 2, "filter": 2, "true": 2, "name": [2, 3], "return": [2, 3], "string": [2, 3], "paramet": [2, 3], "str": 2, "A": [2, 3], "repres": 2, "person": 2, "greet": 2, "type": 2, "world": [2, 3], "dataset": 2, "handl": 2, "train": 2, "rule": 2, "extract": 2, "from": 2, "random": 2, "forest": 2, "classifi": 2, "x": 2, "none": 2, "y": 2, "": 2, "accuraci": 2, "set": [2, 3], "arrai": 2, "like": 2, "np": 2, "pd": 2, "datafram": 2, "list": 2, "etc": 2, "featur": 2, "label": 2, "float": 2, "verbos": 2, "1": 2, "all": 2, "tree": 2, "int": 2, "control": 2, "messag": 2, "print": 2, "consol": 2, "0": 2, "No": 2, "output": 2, "total": 2, "number": 2, "default": 2, "2": 2, "ani": 2, "other": 2, "detail": 2, "applic": 2, "rais": 2, "assertionerror": 2, "If": 2, "ha": 2, "been": 2, "yet": 2, "singl": 2, "decis": 2, "kwarg": 2, "us": 2, "self": 2, "dict": 2, "argument": 2, "pass": 2, "train_test_split": 2, "randomforestclassifi": 2, "tree_": 2, "feature_nam": 2, "node": 2, "current_rul": 2, "rules_list": 2, "travers": 2, "handler": 2, "manag": 2, "appli": 2, "The": 2, "each": 2, "should": 2, "x_arr": 2, "transform": 2, "creat": 2, "binari": 2, "numpi": 2, "ndarrai": 2, "input": 2, "data": 2, "x_test": 2, "y_test": 2, "perceptron": 2, "target": 2, "valu": 2, "x_train": 2, "y_train": 2, "penalti": 2, "l1": 2, "alpha": 2, "01": 2, "i": [2, 3], "constant": 2, "multipli": 2, "regular": 2, "term": 2, "data_point": 2, "check": 2, "whether": 2, "point": 2, "satisfi": 2, "particular": 2, "tupl": 2, "against": 2, "which": 2, "expect": 2, "fals": 2, "otherwis": 2, "bool": 2, "path": 2, "file": 2, "updat": 2, "without": 2, "alter": 2, "built": 2, "function": [2, 3], "ne": 2, "lt": 2, "le": 2, "eq": 2, "gt": 2, "ge": 2, "top_rul": 2, "specifi": 2, "1d": 2, "classif": 2, "n": 2, "rank": 2, "absolut": 2, "coeffici": 2, "option": 2, "top": 2, "contain": 2, "its": 2, "import": 2, "valueerror": 2, "comput": 2, "given": 2, "matrix": 2, "methodnam": 3, "runtest": 3, "testcas": 3, "case": 3, "when": 3}, "objects": {"": [[2, 0, 0, "-", "rules_extraction"], [3, 0, 0, "-", "tests"]], "rules_extraction": [[2, 0, 0, "-", "data_processor"], [2, 0, 0, "-", "hello"], [2, 0, 0, "-", "random_forest_trainer"], [2, 0, 0, "-", "result_plotter"], [2, 0, 0, "-", "rule_handler"], [2, 0, 0, "-", "utils"]], "rules_extraction.data_processor": [[2, 1, 1, "", "DataProcessor"]], "rules_extraction.data_processor.DataProcessor": [[2, 2, 1, "", "filter_dataset"], [2, 2, 1, "", "make_target_df"], [2, 2, 1, "", "process_dataset"]], "rules_extraction.hello": [[2, 3, 1, "", "hello_name"], [2, 3, 1, "", "hello_world"]], "rules_extraction.random_forest_trainer": [[2, 1, 1, "", "RandomForestTrainer"]], "rules_extraction.random_forest_trainer.RandomForestTrainer": [[2, 2, 1, "", "evaluate"], [2, 2, 1, "", "extract_all_rules"], [2, 2, 1, "", "extract_rules"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "recurse"]], "rules_extraction.result_plotter": [[2, 1, 1, "", "ResultPlotter"]], "rules_extraction.result_plotter.ResultPlotter": [[2, 2, 1, "", "plot_results"]], "rules_extraction.rule_handler": [[2, 1, 1, "", "RuleHandler"]], "rules_extraction.rule_handler.RuleHandler": [[2, 2, 1, "", "data_to_rules"], [2, 2, 1, "", "evaluate_perceptron"], [2, 2, 1, "", "fit_perceptron"], [2, 2, 1, "", "is_rule"], [2, 2, 1, "", "load"], [2, 2, 1, "", "load_rules"], [2, 4, 1, "", "ops"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "rank_rules"], [2, 2, 1, "", "save"], [2, 2, 1, "", "save_rules"], [2, 2, 1, "", "score"], [2, 2, 1, "", "visualize"]], "tests": [[3, 0, 0, "-", "test_hello"]], "tests.test_hello": [[3, 1, 1, "", "TestHello"]], "tests.test_hello.TestHello": [[3, 2, 1, "", "test_hello_name"], [3, 2, 1, "", "test_hello_world"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "rule": [0, 1], "extract": [0, 1], "": 0, "document": 0, "content": [0, 2, 3], "indic": 0, "tabl": 0, "rules_extract": 2, "packag": [2, 3], "submodul": [2, 3], "data_processor": 2, "modul": [2, 3], "hello": 2, "random_forest_train": 2, "result_plott": 2, "rule_handl": 2, "util": 2, "test": 3, "test_hello": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Rules Extraction\u2019s documentation!": [[0, "welcome-to-rules-extraction-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "rules-extraction": [[1, "rules-extraction"]], "rules_extraction package": [[2, "rules-extraction-package"]], "Submodules": [[2, "submodules"], [3, "submodules"]], "rules_extraction.data_processor module": [[2, "module-rules_extraction.data_processor"]], "rules_extraction.hello module": [[2, "module-rules_extraction.hello"]], "rules_extraction.random_forest_trainer module": [[2, "module-rules_extraction.random_forest_trainer"]], "rules_extraction.result_plotter module": [[2, "module-rules_extraction.result_plotter"]], "rules_extraction.rule_handler module": [[2, "module-rules_extraction.rule_handler"]], "rules_extraction.utils module": [[2, "module-rules_extraction.utils"]], "Module contents": [[2, "module-rules_extraction"], [3, "module-tests"]], "tests package": [[3, "tests-package"]], "tests.test_hello module": [[3, "module-tests.test_hello"]]}, "indexentries": {"dataprocessor (class in rules_extraction.data_processor)": [[2, "rules_extraction.data_processor.DataProcessor"]], "randomforesttrainer (class in rules_extraction.random_forest_trainer)": [[2, "rules_extraction.random_forest_trainer.RandomForestTrainer"]], "resultplotter (class in rules_extraction.result_plotter)": [[2, "rules_extraction.result_plotter.ResultPlotter"]], "rulehandler (class in rules_extraction.rule_handler)": [[2, "rules_extraction.rule_handler.RuleHandler"]], "data_to_rules() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.data_to_rules"]], "evaluate() (rules_extraction.random_forest_trainer.randomforesttrainer method)": [[2, "rules_extraction.random_forest_trainer.RandomForestTrainer.evaluate"]], "evaluate_perceptron() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.evaluate_perceptron"]], "extract_all_rules() (rules_extraction.random_forest_trainer.randomforesttrainer method)": [[2, "rules_extraction.random_forest_trainer.RandomForestTrainer.extract_all_rules"]], "extract_rules() (rules_extraction.random_forest_trainer.randomforesttrainer method)": [[2, "rules_extraction.random_forest_trainer.RandomForestTrainer.extract_rules"]], "filter_dataset() (rules_extraction.data_processor.dataprocessor method)": [[2, "rules_extraction.data_processor.DataProcessor.filter_dataset"]], "fit() (rules_extraction.random_forest_trainer.randomforesttrainer method)": [[2, "rules_extraction.random_forest_trainer.RandomForestTrainer.fit"]], "fit_perceptron() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.fit_perceptron"]], "hello_name() (in module rules_extraction.hello)": [[2, "rules_extraction.hello.hello_name"]], "hello_world() (in module rules_extraction.hello)": [[2, "rules_extraction.hello.hello_world"]], "is_rule() (rules_extraction.rule_handler.rulehandler static method)": [[2, "rules_extraction.rule_handler.RuleHandler.is_rule"]], "load() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.load"]], "load_rules() (rules_extraction.rule_handler.rulehandler static method)": [[2, "rules_extraction.rule_handler.RuleHandler.load_rules"]], "make_target_df() (rules_extraction.data_processor.dataprocessor static method)": [[2, "rules_extraction.data_processor.DataProcessor.make_target_df"]], "module": [[2, "module-rules_extraction"], [2, "module-rules_extraction.data_processor"], [2, "module-rules_extraction.hello"], [2, "module-rules_extraction.random_forest_trainer"], [2, "module-rules_extraction.result_plotter"], [2, "module-rules_extraction.rule_handler"], [2, "module-rules_extraction.utils"], [3, "module-tests"], [3, "module-tests.test_hello"]], "ops (rules_extraction.rule_handler.rulehandler attribute)": [[2, "rules_extraction.rule_handler.RuleHandler.ops"]], "plot_results() (rules_extraction.result_plotter.resultplotter method)": [[2, "rules_extraction.result_plotter.ResultPlotter.plot_results"]], "predict() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.predict"]], "process_dataset() (rules_extraction.data_processor.dataprocessor method)": [[2, "rules_extraction.data_processor.DataProcessor.process_dataset"]], "rank_rules() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.rank_rules"]], "recurse() (rules_extraction.random_forest_trainer.randomforesttrainer static method)": [[2, "rules_extraction.random_forest_trainer.RandomForestTrainer.recurse"]], "rules_extraction": [[2, "module-rules_extraction"]], "rules_extraction.data_processor": [[2, "module-rules_extraction.data_processor"]], "rules_extraction.hello": [[2, "module-rules_extraction.hello"]], "rules_extraction.random_forest_trainer": [[2, "module-rules_extraction.random_forest_trainer"]], "rules_extraction.result_plotter": [[2, "module-rules_extraction.result_plotter"]], "rules_extraction.rule_handler": [[2, "module-rules_extraction.rule_handler"]], "rules_extraction.utils": [[2, "module-rules_extraction.utils"]], "save() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.save"]], "save_rules() (rules_extraction.rule_handler.rulehandler static method)": [[2, "rules_extraction.rule_handler.RuleHandler.save_rules"]], "score() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.score"]], "visualize() (rules_extraction.rule_handler.rulehandler method)": [[2, "rules_extraction.rule_handler.RuleHandler.visualize"]], "testhello (class in tests.test_hello)": [[3, "tests.test_hello.TestHello"]], "test_hello_name() (tests.test_hello.testhello method)": [[3, "tests.test_hello.TestHello.test_hello_name"]], "test_hello_world() (tests.test_hello.testhello method)": [[3, "tests.test_hello.TestHello.test_hello_world"]], "tests": [[3, "module-tests"]], "tests.test_hello": [[3, "module-tests.test_hello"]]}})
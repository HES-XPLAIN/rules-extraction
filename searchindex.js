Search.setIndex({"alltitles": {"Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "Module contents": [[2, "module-rules_extraction"]], "Submodules": [[2, "submodules"]], "Welcome to Rules Extraction\u2019s documentation!": [[0, null]], "rules-extraction": [[1, null]], "rules_extraction package": [[2, null]], "rules_extraction.plot module": [[2, "module-rules_extraction.plot"]], "rules_extraction.rules module": [[2, "module-rules_extraction.rules"]], "rules_extraction.utils module": [[2, "module-rules_extraction.utils"]]}, "docnames": ["index", "modules", "rules_extraction"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "modules.rst", "rules_extraction.rst"], "indexentries": {"compute_avg_features() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.compute_avg_features", false]], "data_to_rules() (rules_extraction.rules.ruleranker method)": [[2, "rules_extraction.rules.RuleRanker.data_to_rules", false]], "ensemblerule (class in rules_extraction.rules)": [[2, "rules_extraction.rules.EnsembleRule", false]], "extract_all_rules() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.extract_all_rules", false]], "extract_features_resnet() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.extract_features_resnet", false]], "extract_features_vgg() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.extract_features_vgg", false]], "extract_rules() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.extract_rules", false]], "filter_dataset() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.filter_dataset", false]], "fit() (rules_extraction.rules.ensemblerule method)": [[2, "id0", false], [2, "rules_extraction.rules.EnsembleRule.fit", false]], "fit() (rules_extraction.rules.rule method)": [[2, "id3", false], [2, "rules_extraction.rules.Rule.fit", false]], "fit_perceptron() (rules_extraction.rules.ruleranker method)": [[2, "rules_extraction.rules.RuleRanker.fit_perceptron", false]], "is_rule() (rules_extraction.rules.ruleranker static method)": [[2, "rules_extraction.rules.RuleRanker.is_rule", false]], "is_torch_loader() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.is_torch_loader", false]], "is_torch_model() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.is_torch_model", false]], "make_target_df() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.make_target_df", false]], "module": [[2, "module-rules_extraction", false], [2, "module-rules_extraction.plot", false], [2, "module-rules_extraction.rules", false], [2, "module-rules_extraction.utils", false]], "ops (rules_extraction.rules.rule attribute)": [[2, "rules_extraction.rules.Rule.ops", false]], "ops (rules_extraction.rules.ruleranker attribute)": [[2, "rules_extraction.rules.RuleRanker.ops", false]], "plot_accuracy() (in module rules_extraction.plot)": [[2, "rules_extraction.plot.plot_accuracy", false]], "plot_frontier() (in module rules_extraction.plot)": [[2, "rules_extraction.plot.plot_frontier", false]], "predict() (rules_extraction.rules.ensemblerule method)": [[2, "id1", false], [2, "rules_extraction.rules.EnsembleRule.predict", false]], "predict() (rules_extraction.rules.rule method)": [[2, "id4", false], [2, "rules_extraction.rules.Rule.predict", false]], "rank_rules() (rules_extraction.rules.ruleranker method)": [[2, "rules_extraction.rules.RuleRanker.rank_rules", false]], "recurse() (in module rules_extraction.utils)": [[2, "rules_extraction.utils.recurse", false]], "rule (class in rules_extraction.rules)": [[2, "rules_extraction.rules.Rule", false]], "ruleranker (class in rules_extraction.rules)": [[2, "rules_extraction.rules.RuleRanker", false]], "rules_extraction": [[2, "module-rules_extraction", false]], "rules_extraction.plot": [[2, "module-rules_extraction.plot", false]], "rules_extraction.rules": [[2, "module-rules_extraction.rules", false]], "rules_extraction.utils": [[2, "module-rules_extraction.utils", false]], "score() (rules_extraction.rules.ensemblerule method)": [[2, "id2", false], [2, "rules_extraction.rules.EnsembleRule.score", false]], "score() (rules_extraction.rules.rule method)": [[2, "id5", false], [2, "rules_extraction.rules.Rule.score", false]], "transform() (in module rules_extraction.plot)": [[2, "rules_extraction.plot.transform", false]]}, "objects": {"": [[2, 0, 0, "-", "rules_extraction"]], "rules_extraction": [[2, 0, 0, "-", "plot"], [2, 0, 0, "-", "rules"], [2, 0, 0, "-", "utils"]], "rules_extraction.plot": [[2, 1, 1, "", "plot_accuracy"], [2, 1, 1, "", "plot_frontier"], [2, 1, 1, "", "transform"]], "rules_extraction.rules": [[2, 2, 1, "", "EnsembleRule"], [2, 2, 1, "", "Rule"], [2, 2, 1, "", "RuleRanker"]], "rules_extraction.rules.EnsembleRule": [[2, 3, 1, "id0", "fit"], [2, 3, 1, "id1", "predict"], [2, 3, 1, "id2", "score"]], "rules_extraction.rules.Rule": [[2, 3, 1, "id3", "fit"], [2, 4, 1, "", "ops"], [2, 3, 1, "id4", "predict"], [2, 3, 1, "id5", "score"]], "rules_extraction.rules.RuleRanker": [[2, 3, 1, "", "data_to_rules"], [2, 3, 1, "", "fit_perceptron"], [2, 3, 1, "", "is_rule"], [2, 4, 1, "", "ops"], [2, 3, 1, "", "rank_rules"]], "rules_extraction.utils": [[2, 1, 1, "", "compute_avg_features"], [2, 1, 1, "", "extract_all_rules"], [2, 1, 1, "", "extract_features_resnet"], [2, 1, 1, "", "extract_features_vgg"], [2, 1, 1, "", "extract_rules"], [2, 1, 1, "", "filter_dataset"], [2, 1, 1, "", "is_torch_loader"], [2, 1, 1, "", "is_torch_model"], [2, 1, 1, "", "make_target_df"], [2, 1, 1, "", "recurse"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"0": 2, "01": 2, "1": 2, "100": 2, "5": 2, "65": 2, "A": 2, "If": 2, "NOT": 2, "The": 2, "absolut": 2, "accuraci": 2, "addit": 2, "against": 2, "all": 2, "allow": 2, "alpha": 2, "an": 2, "analysi": 2, "ani": 2, "appli": 2, "ar": 2, "arrai": 2, "assign": 2, "avail": 2, "averag": 2, "base": 2, "baseestim": 2, "basic": 2, "batch": 2, "been": 2, "between": 2, "binari": 2, "bool": 2, "built": 2, "calcul": 2, "can": 2, "check": 2, "class": 2, "class_dict": 2, "class_nam": 2, "classifi": 2, "classifiermixin": 2, "coeffici": 2, "comparison": 2, "comput": 2, "compute_avg_featur": [1, 2], "condit": 2, "configur": 2, "consid": 2, "constant": 2, "contain": 2, "content": 1, "correct": 2, "correctli": 2, "correspond": 2, "cpu": 2, "creat": 2, "csv": 2, "current_rul": 2, "data": 2, "data_point": 2, "data_to_rul": [1, 2], "datafram": 2, "dataload": 2, "datapoint": 2, "dataset": 2, "decis": 2, "default": 2, "defin": 2, "devic": 2, "df": 2, "df_featur": 2, "df_test": 2, "dict": 2, "dictionari": 2, "each": 2, "embed": 2, "ensembl": 2, "ensemblerul": [1, 2], "eq": 2, "evalu": 2, "expect": 2, "extract": 2, "extract_all_rul": [1, 2], "extract_features_resnet": [1, 2], "extract_features_vgg": [1, 2], "extract_rul": [1, 2], "fals": 2, "featur": 2, "feature_column": 2, "feature_nam": 2, "features_map": 2, "file": 2, "filter": 2, "filter_dataset": [1, 2], "fit": [1, 2], "fit_perceptron": [1, 2], "float": 2, "forest": 2, "from": 2, "frontier": 2, "function": 2, "further": 2, "ge": 2, "given": 2, "gpu": 2, "gt": 2, "ha": 2, "handler": 2, "i": 2, "identifi": 2, "ignor": 2, "imag": 2, "implement": 2, "import": 2, "includ": 2, "index": [0, 2], "indic": 2, "individu": 2, "input": 2, "instanc": 2, "int": 2, "is_rul": [1, 2], "is_torch_load": [1, 2], "is_torch_model": [1, 2], "iter": 2, "its": 2, "kwarg": 2, "l1": 2, "label": 2, "le": 2, "level": 2, "like": 2, "list": 2, "loader": 2, "lt": 2, "make_target_df": [1, 2], "manag": 2, "map": 2, "maximum": 2, "met": 2, "model": 2, "modul": [0, 1], "multipli": 2, "n": 2, "n_estim": 2, "name": 2, "ndarrai": 2, "ne": 2, "network": 2, "neural": 2, "new": 2, "nn": 2, "node": 2, "none": 2, "note": 2, "number": 2, "numpi": 2, "obj": 2, "object": 2, "obtain": 2, "one": 2, "op": [1, 2], "oper": 2, "option": 2, "other": 2, "otherwis": 2, "over": 2, "packag": [0, 1], "paramet": 2, "particular": 2, "path": 2, "pd": 2, "penalti": 2, "perceptron": 2, "perform": 2, "plot": 1, "plot_accuraci": [1, 2], "plot_fronti": [1, 2], "point": 2, "pre": 2, "predefin": 2, "predict": [1, 2], "produc": 2, "provid": 2, "pytorch": 2, "rais": 2, "random": 2, "randomforestclassifi": 2, "rank": 2, "rank_rul": [1, 2], "recurs": [1, 2], "regular": 2, "resnet": 2, "result": 2, "return": 2, "rulerank": [1, 2], "rules_extract": [0, 1], "rules_list": 2, "sampl": 2, "satisfi": 2, "save": 2, "save_csv": 2, "save_path": 2, "score": [1, 2], "self": 2, "set": 2, "should": 2, "show": 2, "simpl": 2, "singl": 2, "static": 2, "store": 2, "str": 2, "string": 2, "submodul": 1, "target": 2, "target_class": 2, "tensor": 2, "term": 2, "test": 2, "thi": 2, "top": 2, "torch": 2, "train": 2, "transform": [1, 2], "transpar": 2, "travers": 2, "tree": 2, "tree_": 2, "true": 2, "tupl": 2, "type": 2, "typeerror": 2, "us": 2, "util": 1, "v": 2, "valu": 2, "valueerror": 2, "vgg": 2, "want": 2, "when": 2, "where": 2, "whether": 2, "which": 2, "x": 2, "x_arr": 2, "x_test": 2, "x_train": 2, "y": 2, "y_test": 2, "y_train": 2, "you": 2}, "titles": ["Welcome to Rules Extraction\u2019s documentation!", "rules-extraction", "rules_extraction package"], "titleterms": {"": 0, "content": [0, 2], "document": 0, "extract": [0, 1], "indic": 0, "modul": 2, "packag": 2, "plot": 2, "rule": [0, 1, 2], "rules_extract": 2, "submodul": 2, "tabl": 0, "util": 2, "welcom": 0}})